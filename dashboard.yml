kiosk_mode:
  non_admin_settings:
    hide_header: true
    hide_menubutton: true
    ignore_entity_settings: true
  entity_settings:
    - entity:
        input_boolean.kiosk_mode: 'on'
      hide_header: true
    - entity:
        input_boolean.kiosk_mode: 'off'
      hide_header: false
decluttering_templates:
  light_slider:
    card:
      type: custom:big-slider-card
      entity: '[[entity]]'
      name: '[[name]]'
      attribute: brightness
      transition: 0.3
      height: 75
      background_color: '[[background]]'
      color: '#ffd4c1'
      icon_color: var(--black)
      icon: '[[icon]]'
      show_percentage: true
      min: 0
      max: 100
      hold_time: 600
      settle_time: 3000
      tap_action:
        action: toggle
      hold_action:
        action: more-info
      card_mod:
        style: |
          {% if is_state('[[entity]]', 'on') %}
            #container{background:[[background]]!important;margin-bottom: 12px;}
            #name {color:var(--black)!important;font-size:14px!important;font-weight: 300!important;opacity:0.7}
            #percentage {font-size:16px!important;color: black!important;font-weight:500!important;}
            #slider {opacity: 1!important;background: var(--active-light)!important}
          {% else %}
            #container {background:[[background]]!important;margin-bottom: 12px;}
            #name {color:var(--gray800)!important;font-size:14px!important;font-weight: 300!important;opacity:0.7}
            #percentage {color:var(--gray800)!important;font-size:16px!important;font-weight:500!important;}
            #icon {color: var(--gray800)!important; opacity: 1!important;filter: none;}
          {% endif %}
  light_toggle:
    card:
      type: custom:button-card
      entity: '[[entity]]'
      name: '[[name]]'
      icon: '[[icon]]'
      show_label: true
      state:
        - value: 'on'
          label: På
          styles:
            card:
              - background: var(--active-light)
        - value: 'off'
          label: Av
          styles:
            card:
              - background: '[[background]]'
            name:
              - color: var(--gray800)
            label:
              - color: var(--gray800)
            icon:
              - color: var(--gray800)
        - value: unavailable
          label: Av
          styles:
            card:
              - background: '[[background]]'
            name:
              - color: var(--gray800)
            label:
              - color: var(--gray800)
            icon:
              - color: var(--gray800)
      styles:
        grid:
          - grid-template-columns: 54px 1fr
          - grid-template-areas: '"i n" "i l"'
        icon:
          - width: 24px
          - color: var(--black)
        img_cell:
          - justify-self: start
          - width: 24px
          - height: 24px
          - padding: 0 6px
        label:
          - justify-self: start
          - font-size: 16px
          - font-weight: 500
          - padding-top: 2px
          - color: var(--black)
        card:
          - padding: 18px
          - height: 75px
          - margin-bottom: 12px
        name:
          - justify-self: start
          - font-size: 14px
          - color: var(--black)
          - opacity: 0.7
          - padding-bottom: 2px
button_card_templates:
  room_conditions:
    variables:
      background: var(--popupBG)
      entity: null
      temp: >
        [[[ return
        Math.round((states['sensor.temperatur_stue_temperature'].state) * 10)/10
        + '°' + '<span style="font-size:0.3em">' +
        Math.round((states['sensor.temperatur_stue_humidity'].state) * 10)/10 +
        '%']]]
    show_icon: false
    show_name: false
    show_label: true
    custom_fields:
      temp: '[[[ return variables.temp ]]]'
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
              color: var(--red)
          line_width: 0
          height: 100
          show:
            icon: false
            name: false
            state: false
            legend: false
            labels: false
          card_mod:
            style: |
              ha-card {
                border-style: none;
                background: none;
              }    
    styles:
      grid:
        - grid-template-areas: '"temp"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content
      card:
        - padding: 24px
        - background: '[[[ return variables.background ]]]'
      custom_fields:
        temp:
          - justify-self: start
          - text-align: left
          - font-size: 66px
          - color: var(--gray800)
          - line-height: 66px
          - font-weight: 300
          - padding: 12px 0 0 0
        graph:
          - position: absolute
          - width: 100%
          - left: 0
          - bottom: 0
  sensor_big_percentage:
    variables:
      entity: var_entity
      name: var_name
      icon: var_icon
      background: var(--popupBG)
      label: var_label
      bar: var_bar
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    label: '[[[ return variables.label ]]]'
    show_icon: true
    show_label: true
    icon: '[[[ return variables.icon ]]]'
    styles:
      card:
        - padding: 0
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "l" "n" "bar"'
      label:
        - justify-self: start
        - font-size: 40px
        - font-weight: 300
        - padding-left: 20px
        - color: var(--gray800)
      name:
        - justify-self: start
        - align-self: start
        - font-size: 14px
        - color: var(--gray800)
        - padding-left: 20px
        - opacity: '0.7'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - margin: 4px 4px 0 0
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      custom_fields:
        bar:
          - justify-self: start
          - width: 100%
          - background: rgba(var(--highlight))
          - height: 30px
          - margin-top: 6px
    custom_fields:
      bar: '[[[ return variables.bar ]]]'
  sensor_big_graph:
    variables:
      name: null
      icon: null
      label: null
      background: var(--popupBG)
      text: var(--gray800)
      graph: null
    name: '[[[ return variables.name ]]]'
    label: '[[[ return variables.label ]]]'
    show_label: true
    show_icon: true
    icon: '[[[ return variables.icon ]]]'
    styles:
      card:
        - padding: 4px 4px 20px 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "l" "n"'
      label:
        - justify-self: start
        - font-size: 40px
        - font-weight: 300
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      custom_fields:
        graph:
          - position: absolute
          - width: 100%
          - left: 0
          - bottom: 0
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.graph ]]]'
              color: var(--red)
          line_width: 0
          height: 200
          show:
            icon: false
            name: false
            state: false
            legend: false
            labels: false
          card_mod:
            style: |
              ha-card {
                border-style: none;
                background: none;
              }
  button_trigger:
    variables:
      name: null
      icon: null
      entity: null
      background: var(--red)
      text: var(--black)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      grid:
        - grid-template-areas: '"i" "n"'
      img_cell:
        - justify-self: start
        - align-self: start
        - width: 24px
        - height: 24px
      icon:
        - width: 24px
        - height: 24px
        - color: '[[[ return variables.text ]]]'
      name:
        - justify-self: start
        - text-align: left
        - font-size: 16px
        - font-weight: 500
        - color: '[[[ return variables.text ]]]'
      card:
        - padding: 20px
        - background: '[[[ return variables.background ]]]'
        - height: 130px
  sensor_big:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--popupBG)
    icon: '[[[ return variables.icon ]]]'
    label: >
      [[[  return '<marquee behavior="alternate" scrollamount="2">' +
      variables.label + '<\marquee>' ]]]
    name: '[[[ return variables.name ]]]'
    show_label: true
    styles:
      card:
        - padding: 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "l" "n"'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - margin: '-16px -16px 0 0'
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      label:
        - justify-self: start
        - font-size: 2em
        - font-weight: 300
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
  sensor_big_2columns:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--popupBG)
      state: var_state
    icon: '[[[ return variables.icon ]]]'
    label: >
      [[[  return '<marquee behavior="alternate" scrollamount="2">' +
      variables.label + '<\marquee>' ]]]
    name: '[[[ return variables.name ]]]'
    show_label: true
    custom_fields:
      state: '[[[ return variables.state ]]]'
    styles:
      card:
        - padding: 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i i" "l state" "n n"'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - margin: '-16px -16px 0 0'
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      label:
        - justify-self: start
        - font-size: 2em
        - font-weight: 300
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
      custom_fields:
        state:
          - font-size: 14px
          - color: var(--gray800)
          - opacity: '0.7'
          - margin-bottom: '-5px'
  button_toggle:
    variables:
      name: null
      icon: null
      entity: null
      background: var(--popupBG)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: toggle
    state:
      - value: 'off'
        styles:
          card:
            - background: var(--gray800)
          img_cell:
            - background: rgba(var(--highlight_active))
          icon:
            - color: var(--gray000)
          name:
            - color: var(--gray000)
          custom_fields:
            state:
              - color: var(--gray000)
    styles:
      card:
        - padding: 4px 4px 20px 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i i" "state icon" "n icon"'
        - grid-template-columns: 1fr min-content
        - grid-template-rows: 1fr min-content min-content
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
      custom_fields:
        icon:
          - justify-self: end
        state:
          - justify-self: start
          - font-size: 40px
          - font-weight: 300
          - color: var(--gray800)
          - margin-right: 16px
    custom_fields:
      icon: |
        [[[
         var state = entity.state;
         if(state == "on")
          return `<ha-icon
          icon="mdi:toggle-switch"
          style="color: var(--green); width:60px; height:60px;">
          </ha-icon>
          `;
         else 
          return `<ha-icon
          icon="mdi:toggle-switch-off"
          style="color: var(--gray000); width:60px; height:60px;">
          </ha-icon>
          `;
        ]]]
      state: |
        [[[
          var state = entity.state
         if(state == "on")
          return `<span>På</san>
          `;
         else 
          return `<span>Av</san>
          `;
        ]]] 
  button_toggle_small:
    variables:
      name: null
      icon: null
      entity: null
      background: var(--popupBG)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: |
      [[[ return variables.name ]]]
    tap_action:
      action: toggle
    state:
      - value: 'off'
        styles:
          card:
            - background: var(--gray800)
          icon:
            - color: var(--gray000)
          img_cell:
            - background: rgba(var(--highlight_active))
          name:
            - color: var(--gray000)
          custom_fields:
            state:
              - color: var(--gray000)
    styles:
      card:
        - height: 66px
        - border-radius: 75px
        - padding: 4px 20px 4px 4px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-columns: 76px 1fr min-content
        - grid-template-areas: '"i state icon" "i n icon"'
      icon:
        - width: 30px
        - color: var(--gray800)
      img_cell:
        - justify-self: start
        - width: 30px
        - height: 30px
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: 0.7
        - padding-bottom: 7px
      custom_fields:
        icon: null
        state:
          - justify-self: start
          - font-size: 16px
          - padding-top: 4px
          - font-weight: 500
          - color: var(--gray800)
    custom_fields:
      icon: |
        [[[
         var state = entity.state;
         if(state == "on")
          return `<ha-icon
          icon="mdi:toggle-switch"
          style="color: var(--green); width:50px; height:40px;">
          </ha-icon>
          `;
         else 
          return `<ha-icon
          icon="mdi:toggle-switch-off"
          style="color: var(--gray000); width:50px; height:40px;">
          </ha-icon>
          `;
        ]]]
      state: |
        [[[
          var state = entity.state
         if(state == "on")
          return `<span>På</san>
          `;
         else 
          return `<span>Av</san>
          `;
        ]]] 
  chips_big_active:
    variables:
      name: null
      entity: null
      icon: null
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - padding: 4px
        - background: var(--active-big)
      grid:
        - grid-template-areas: |
            "i n"        
      img_cell:
        - width: 22px
        - height: 22px
        - padding: 9px
        - background: var(--white)
        - border-radius: 100%
      icon:
        - width: 22px
        - height: 22px
        - color: var(--black)
      name:
        - padding: 0 10px
        - font-size: 14px
        - color: var(--black)
  chips_big:
    variables:
      name: null
      entity: null
      icon: null
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - padding: 4px
        - background: var(--gray800)
      grid:
        - grid-template-areas: |
            "i n"        
        - grid-template-columns: min-content 1fr
      img_cell:
        - justify-self: start
        - width: 22px
        - height: 22px
        - padding: 9px
        - background: var(--gray000)
        - border-radius: 100%
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray800)
      name:
        - justify-self: start
        - padding: 0 10px
        - font-size: 14px
        - color: var(--gray000)
  chips_medium_active:
    variables:
      name: null
      icon: null
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - padding: 10px 16px 10px 12px
        - background: var(--active-small)
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: min-content 1fr
      img_cell:
        - justify-self: start
        - align-self: center
        - width: 20px
        - height: 20px
        - background: none
      icon:
        - width: 20px
        - height: 20px
        - margin-top: '-1px'
        - color: var(--black)
      name:
        - justify-self: start
        - font-size: 14px
        - padding-left: 4px
        - color: var(--black)
  chips_medium:
    variables:
      name: null
      icon: null
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - padding: 10px 16px 10px 12px
        - background: var(--gray800)
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: min-content 1fr
      img_cell:
        - justify-self: start
        - align-self: center
        - width: 20px
        - height: 20px
        - background: none
      icon:
        - width: 20px
        - height: 20px
        - margin-top: '-1px'
        - color: var(--gray000)
      name:
        - justify-self: start
        - font-size: 14px
        - padding-left: 4px
        - color: var(--gray000)
  chips_small:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--gray800)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray000)
  chips_small_active:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--active-small)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--black)
  room_card:
    variables:
      name: Stue
      icon: mdi:unicorn
      path: '#stue_firstF'
      state: null
      background: var(--gray000)
      color: var(--green)
      text: var(--gray800)
      radius: 36px 36px 6px 36px
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables.path ]]]'
    custom_fields:
      temp: '[[[ return variables.state ]]]'
    styles:
      card:
        - padding: 8px
        - height: 100%
        - border-radius: '[[[ return variables.radius ]]]'
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"n i" "temp temp"'
        - grid-template-rows: 1fr min-content
        - grid-template-columns: min-content 1fr
      icon:
        - width: 28px
        - color: var(--black)
      img_cell:
        - justify-self: end
        - background: '[[[ return variables.color ]]]'
        - border-radius: 100%
        - align-self: start
        - width: 60px
        - height: 60px
      name:
        - justify-self: start
        - align-self: start
        - text-align: left
        - font-size: 1em
        - font-weight: 500
        - color: '[[[ return variables.text ]]]'
        - padding: 14px
      custom_fields:
        temp:
          - justify-self: start
          - font-size: 3em
          - line-height: 1em
          - font-weight: 300
          - color: '[[[ return variables.text ]]]'
          - padding: 0 0 6px 14px
  sensor_small:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--popupBG)
      text: var(--gray800)
    name: '[[[ return variables.name ]]]'
    label: '[[[ return variables.label ]]]'
    show_label: true
    icon: '[[[ return variables.icon ]]]'
    styles:
      grid:
        - grid-template-columns: 76px 1fr
        - grid-template-areas: '"i l" "i n"'
      icon:
        - width: 30px
        - color: var(--gray800)
      img_cell:
        - justify-self: start
        - width: 30px
        - height: 30px
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
      label:
        - justify-self: start
        - font-size: 16px
        - padding-top: 4px
        - font-weight: 500
        - color: var(--gray800)
      card:
        - height: 66px
        - border-radius: 75px
        - padding: 4px 20px 4px 4px
        - background: '[[[ return variables.background ]]]'
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: 0.7
        - padding-bottom: 7px
views:
  - title: Home
    icon: mdi:home
    subview: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:gap-card
            height: 12px
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: min-content 1fr max-content
              grid-template-rows: min-content
              grid-template-areas: |
                "button . weather"
            cards:
              - type: custom:button-card
                view_layout:
                  grid-area: button
                show_name: false
                show_label: false
                icon: mdi:menu
                entity: input_boolean.kiosk_mode
                hold_action:
                  action: toggle
                tap_action:
                  action: call-service
                  service: |
                    [[[
                      this.dispatchEvent(new Event('hass-toggle-menu', { bubbles: true, composed: true}));
                      return none;
                    ]]]          
                styles:
                  icon:
                    - width: 24px
                    - color: var(--contrast20)
                  img_cell:
                    - width: 30px
                    - height: 30px
                    - padding: 6px
                    - justify-self: start
                  card:
                    - height: 100%
                    - background: none
                    - padding: 6px 0
                    - '--mdc-ripple-press-opacity': 0
              - type: custom:button-card
                view_layout:
                  grid-area: weather
                entity: weather.laval_previsions
                show_icon: false
                styles:
                  custom_fields:
                    icon:
                      - justify-self: end
                      - padding-right: 10px
                  grid:
                    - grid-template-areas: '"icon l" "icon n"'
                    - grid-template-columns: 1fr min-content
                    - grid-template-rows: 10px 40px
                  card:
                    - background: none
                    - padding: 6px 0
                    - overflow: visible
                  name:
                    - justify-self: end
                    - font-size: 14px
                    - color: var(--contrast20)
                  label:
                    - justify-self: end
                    - font-size: 26px
                    - color: var(--contrast20)
                name: |
                  [[[ 
                    return 'humidité: ' + entity.attributes.humidity + '%'
                  ]]]
                label: |
                  [[[ 
                    return `${parseFloat(entity.attributes.temperature).toFixed(1)}°`
                  ]]]
                show_label: true
                custom_fields:
                  icon: |
                    [[[
                      return '<img src = "/local/weather_jf/' + states['weather.laval_previsions'].state + '.svg" width="70" height="70" />'
                    ]]] 
                tap_action:
                  action: navigate
                  navigation_path: '#weather'
          - type: custom:paper-buttons-row
            styles:
              gap: 8px
              overflow-x: scroll
              margin: 24px 8px 0 8px
            buttons:
              - icon: mdi:door
                layout: icon|name
                name: Inngangsdør
                entity: lock.inngangsdor
                tap_action:
                  action: toggle
                state_styles:
                  unlocked:
                    button:
                      background: var(--active-big)
                    name:
                      color: var(--black)
                    icon:
                      background-color: var(--white)
                      color: var(--black)
                styles:
                  name:
                    padding: 0 10px
                    color: var(--gray000)
                  button:
                    display: flex
                    background-color: var(--gray800)
                    border-radius: 24px
                    color: var(--white)
                    height: 34px
                    margin-right: 100px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:washing-machine
                layout: icon|state
                entity: sensor.vaskemaskin
                state:
                  attribute: remain_time
                styles:
                  state:
                    padding: 0 10px
                    color: var(--black)
                  button:
                    display: '{{ ''flex'' if is_state(config.entity, ''on'') else ''none'' }}'
                    background: var(--active-big)
                    border-radius: 24px
                    color: var(--black)
                    height: 34px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:washing-machine
                layout: icon|state
                entity: sensor.oppvaskmaskin
                state:
                  attribute: remain_time
                styles:
                  state:
                    padding: 0 10px
                    color: var(--black)
                  button:
                    display: '{{ ''flex'' if is_state(config.entity, ''on'') else ''none'' }}'
                    background: var(--active-big)
                    border-radius: 24px
                    color: var(--black)
                    height: 34px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:vacuum
                entity: vacuum.rolf
                layout: icon
                name: Vacuum
                ripple: none
                tap_action:
                  action: navigate
                  navigation_path: '#rolf'
                styles:
                  name:
                    padding: 0 10px
                  button:
                    display: >-
                      {{ 'none' if is_state(config.entity, 'docked') else 'flex'
                      }}
                    background: var(--active-big)
                    border-radius: 50%
                    color: white
                    height: 34px
                  icon:
                    '--mdc-icon-size': 22px
                    color: var(--black)
                    width: 34px
                    height: 34px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
              - icon: mdi:solar-power-variant-outline
                layout: icon|state
                entity: sensor.afore_inverter_pv_total_power
                state: '{{ states(config.entity) }}w'
                styles:
                  state:
                    padding: 0 10px
                    color: var(--gray000)
                  button:
                    display: >-
                      {% if states(config.entity) | float < 20 %}none{% else
                      %}flex{% endif %}
                    background-color: var(--gray800)
                    border-radius: 24px
                    color: var(--white)
                    height: 34px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:transmission-tower
                layout: icon|state
                entity: sensor.amsleser_p
                state: '{{ states(config.entity) }}w'
                styles:
                  state:
                    padding: 0 10px
                    color: var(--gray000)
                  button:
                    display: flex
                    background-color: var(--gray800)
                    border-radius: 24px
                    color: var(--white)
                    height: 34px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:movie-open
                layout: icon|name
                name: Filmkveld
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.filmkveld
                  data:
                    transition: 1
                styles:
                  name:
                    padding: 0 10px
                    color: var(--gray000)
                  button:
                    display: flex
                    background-color: var(--gray800)
                    border-radius: 24px
                    color: var(--white)
                    height: 34px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:sleep
                layout: icon|name
                name: Leggetid
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.stue_secondF_leggetid
                  data:
                    transition: 1
                styles:
                  name:
                    padding: 0 10px
                    color: var(--gray000)
                  button:
                    display: flex
                    background-color: var(--gray800)
                    border-radius: 24px
                    color: var(--white)
                    height: 34px
                  icon:
                    '--mdc-icon-size': 26px
                    color: var(--gray800)
                    width: 36px
                    height: 36px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
                    background: var(--gray000)
                    border-radius: 50%
              - icon: mdi:wifi
                layout: icon
                name: Wifi
                ripple: none
                tap_action:
                  action: navigate
                  navigation_path: '#wifi'
                styles:
                  name:
                    padding: 0 10px
                  button:
                    display: flex
                    background-color: var(--gray800)
                    border-radius: 50%
                    color: white
                    height: 34px
                  icon:
                    '--mdc-icon-size': 24px
                    color: var(--gray000)
                    width: 34px
                    height: 34px
                    display: flex
                    margin-left: '-2px'
                    justify-content: center
                    align-items: center
        view_layout:
          grid-area: header
      - type: vertical-stack
        cards:
          - type: custom:gap-card
            height: 48
          - type: custom:local-conditional-card
            id: default
            default: show
            card:
              type: vertical-stack
              cards:
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr max-content max-content max-content
                    grid-template-rows: min-content
                    grid-template-areas: |
                      "one two three four five"  
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: one
                      name: Pièces
                      styles:
                        card:
                          - background: none
                          - padding: 14px 0 15px 0
                          - '--mdc-ripple-press-opacity': 0
                        name:
                          - font-size: 16px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: center
                    - type: custom:button-card
                      template: chips_big
                      view_layout:
                        grid-area: five
                      variables:
                        name: Tout
                        icon: mdi:expand-all
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: show
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: two
                      variables:
                        icon: mdi:home-floor-b
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: show
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: three
                      variables:
                        icon: mdi:home-floor-1
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: show
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: four
                      variables:
                        icon: mdi:home-floor-2
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: show
                            - basement: hide
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr 1fr
                    grid-template-rows: 146px 70px 146px
                    grid-template-areas: |
                      "stue kjokken"
                      "stue secondF"
                      "gang secondF"    
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: stue
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Salon']]]
                        icon: mdi:sofa
                        path: '#stue_firstF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--green)
                        text: var(--gray800)
                        radius: 36px 36px 6px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: kjokken
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Kjøkken']]]
                        icon: mdi:silverware-variant
                        path: '#kjokken'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--blue)
                        text: var(--gray800)
                        radius: 36px 36px 36px 6px
                    - type: custom:button-card
                      view_layout:
                        grid-area: secondF
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Stue<br>secondF']]]
                        icon: mdi:desk
                        path: '#stue_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--orange)
                        text: var(--gray800)
                        radius: 6px 36px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: gang
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Gang']]]
                        icon: mdi:door
                        path: '#gang'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--yellow)
                        text: var(--gray800)
                        radius: 36px 6px 36px 36px
              columns: 1
          - type: custom:local-conditional-card
            id: allRoom
            default: hide
            card:
              type: vertical-stack
              cards:
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr max-content max-content max-content
                    grid-template-rows: min-content
                    grid-template-areas: |
                      "one two three four five"  
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: one
                      name: Pièces
                      styles:
                        card:
                          - background: none
                          - padding: 14px 0 15px 0
                          - '--mdc-ripple-press-opacity': 0
                        name:
                          - font-size: 16px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: center
                    - type: custom:button-card
                      template: chips_big_active
                      view_layout:
                        grid-area: five
                      variables:
                        name: Tout
                        icon: mdi:expand-all
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: show
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: two
                      variables:
                        icon: mdi:home-floor-b
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: show
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: three
                      variables:
                        icon: mdi:home-floor-1
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: show
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: four
                      variables:
                        icon: mdi:home-floor-2
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: show
                            - basement: hide
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr 1fr
                    grid-template-rows: 146px 70px 146px 146px 70px 146px
                    grid-template-areas: |
                      "stue kjokken"
                      "stue secondF"
                      "gang secondF"    
                      "bado badn"
                      "sov badn"
                      "sov barn"
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: stue
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Stue<br>firstF']]]
                        icon: mdi:sofa
                        path: '#stue_firstF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--green)
                        text: var(--gray800)
                        radius: 36px 36px 6px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: kjokken
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Kjøkken']]]
                        icon: mdi:silverware-variant
                        path: '#kjokken'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--blue)
                        text: var(--gray800)
                        radius: 36px 36px 36px 6px
                    - type: custom:button-card
                      view_layout:
                        grid-area: secondF
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Stue<br>secondF']]]
                        icon: mdi:desk
                        path: '#stue_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--orange)
                        text: var(--gray800)
                        radius: 6px 36px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: gang
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Gang']]]
                        icon: mdi:door
                        path: '#gang'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--yellow)
                        text: var(--gray800)
                        radius: 36px 6px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: bado
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Bad secondF']]]
                        icon: mdi:shower-head
                        path: '#bad_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--red)
                        text: var(--gray800)
                        radius: 36px 36px 6px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: badn
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Bad firstF']]]
                        icon: mdi:washing-machine
                        path: '#bad_firstF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--blue-dark)
                        text: var(--gray800)
                        radius: 36px 36px 36px 6px
                    - type: custom:button-card
                      view_layout:
                        grid-area: sov
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Soverom']]]
                        icon: mdi:bed-king
                        path: '#soverom'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--purple)
                        text: var(--gray800)
                        radius: 36px 6px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: barn
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Barnerom']]]
                        icon: mdi:bed
                        path: '#barnerom'
                        state: |
                          [[[ 
                            var temp1 = parseFloat(states['sensor.chauffage_salon_temperature'].state);
                            var temp2 = parseFloat(states['sensor.chauffage_salon_temperature'].state);      
                            var temp = Math.round((temp1 + temp2) / 2);

                            var hum1 = parseFloat(states['sensor.chauffage_salon_temperature'].state);
                            var hum2 = parseFloat(states['sensor.chauffage_salon_temperature'].state);      
                            var hum = Math.round((hum1 + hum2) / 2);

                            return temp + '°<span style="font-size:0.3em;opacity:0.7">' + hum + '%</span>'
                          ]]]
                        background: var(--gray000)
                        color: var(--pink)
                        text: var(--gray800)
                        radius: 6px 36px 36px 36px
              columns: 1
          - type: custom:local-conditional-card
            id: firstF
            default: hide
            card:
              type: vertical-stack
              cards:
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr max-content max-content max-content
                    grid-template-rows: min-content
                    grid-template-areas: |
                      "one two three four five"  
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: one
                      name: Pièces
                      styles:
                        card:
                          - background: none
                          - padding: 14px 0 15px 0
                          - '--mdc-ripple-press-opacity': 0
                        name:
                          - font-size: 16px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: center
                    - type: custom:button-card
                      template: chips_big
                      view_layout:
                        grid-area: five
                      variables:
                        name: Tout
                        icon: mdi:expand-all
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: show
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: two
                      variables:
                        icon: mdi:home-floor-b
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: show
                    - type: custom:button-card
                      template: chips_small_active
                      view_layout:
                        grid-area: three
                      variables:
                        icon: mdi:home-floor-1
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: show
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: four
                      variables:
                        icon: mdi:home-floor-2
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: show
                            - basement: hide
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr 1fr
                    grid-template-rows: 146px 70px 146px
                    grid-template-areas: |
                      "stue kjokken"
                      "stue badn"
                      "gang badn"    
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: stue
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Stue<br>firstF']]]
                        icon: mdi:sofa
                        path: '#stue_firstF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--green)
                        text: var(--gray800)
                        radius: 36px 36px 6px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: kjokken
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Kjøkken']]]
                        icon: mdi:silverware-variant
                        path: '#kjokken'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--blue)
                        text: var(--gray800)
                        radius: 36px 36px 36px 6px
                    - type: custom:button-card
                      view_layout:
                        grid-area: badn
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Bad firstF']]]
                        icon: mdi:washing-machine
                        path: '#bad_firstF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--blue-dark)
                        text: var(--gray800)
                        radius: 6px 36px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: gang
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Gang']]]
                        icon: mdi:door
                        path: '#gang'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--yellow)
                        text: var(--gray800)
                        radius: 36px 6px 36px 36px
              columns: 1
          - type: custom:local-conditional-card
            id: secondF
            default: hide
            card:
              type: vertical-stack
              cards:
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr max-content max-content max-content
                    grid-template-rows: min-content
                    grid-template-areas: |
                      "one two three four five"  
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: one
                      name: Pièces
                      styles:
                        card:
                          - background: none
                          - padding: 14px 0 15px 0
                          - '--mdc-ripple-press-opacity': 0
                        name:
                          - font-size: 16px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: center
                    - type: custom:button-card
                      template: chips_big
                      view_layout:
                        grid-area: five
                      variables:
                        name: Tout
                        icon: mdi:expand-all
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: show
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: two
                      variables:
                        icon: mdi:home-floor-b
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: show
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: three
                      variables:
                        icon: mdi:home-floor-1
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: show
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small_active
                      view_layout:
                        grid-area: four
                      variables:
                        icon: mdi:home-floor-2
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: show
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr 1fr
                    grid-template-rows: 146px 70px 146px
                    grid-template-areas: |
                      "secondF sov"
                      "secondF bado"
                      "barn bado"    
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: secondF
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Stue<br>secondF']]]
                        icon: mdi:desk
                        path: '#stue_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--orange)
                        text: var(--gray800)
                        radius: 36px 36px 6px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: barn
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Barnerom']]]
                        icon: mdi:bed
                        path: '#barnerom'
                        state: |
                          [[[ 
                            var temp1 = parseFloat(states['sensor.chauffage_salon_temperature'].state);
                            var temp2 = parseFloat(states['sensor.chauffage_salon_temperature'].state);      
                            var temp = Math.round((temp1 + temp2) / 2);

                            var hum1 = parseFloat(states['sensor.chauffage_salon_temperature'].state);
                            var hum2 = parseFloat(states['sensor.chauffage_salon_temperature'].state);      
                            var hum = Math.round((hum1 + hum2) / 2);

                            return temp + '°<span style="font-size:0.3em;opacity:0.7">' + hum + '%</span>'
                          ]]]
                        background: var(--gray000)
                        color: var(--pink)
                        text: var(--gray800)
                        radius: 36px 6px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: sov
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Soverom']]]
                        icon: mdi:bed-king
                        path: '#soverom'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--purple)
                        text: var(--gray800)
                        radius: 36px 36px 36px 6px
                    - type: custom:button-card
                      view_layout:
                        grid-area: bado
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Bad secondF']]]
                        icon: mdi:shower-head
                        path: '#bad_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--red)
                        text: var(--gray800)
                        radius: 6px 36px 36px 36px
              columns: 1
          - type: custom:local-conditional-card
            id: basement
            default: hide
            card:
              type: vertical-stack
              cards:
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr max-content max-content max-content
                    grid-template-rows: min-content
                    grid-template-areas: |
                      "one two three four five"  
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: one
                      name: Pièces
                      styles:
                        card:
                          - background: none
                          - padding: 14px 0 15px 0
                          - '--mdc-ripple-press-opacity': 0
                        name:
                          - font-size: 16px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: center
                    - type: custom:button-card
                      template: chips_big
                      view_layout:
                        grid-area: five
                      variables:
                        name: Tout
                        icon: mdi:expand-all
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: show
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small_active
                      view_layout:
                        grid-area: two
                      variables:
                        icon: mdi:home-floor-b
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: show
                            - allRoom: hide
                            - firstF: hide
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: three
                      variables:
                        icon: mdi:home-floor-1
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: show
                            - secondF: hide
                            - basement: hide
                    - type: custom:button-card
                      template: chips_small
                      view_layout:
                        grid-area: four
                      variables:
                        icon: mdi:home-floor-2
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - default: hide
                            - allRoom: hide
                            - firstF: hide
                            - secondF: show
                            - basement: hide
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    grid-template-columns: 1fr 1fr
                    grid-template-rows: 146px 70px 146px
                    grid-template-areas: |
                      "secondF sov"
                      "secondF bado"
                      "barn bado"    
                  cards:
                    - type: custom:button-card
                      view_layout:
                        grid-area: secondF
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Stue<br>secondF']]]
                        icon: mdi:desk
                        path: '#stue_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--orange)
                        text: var(--gray800)
                        radius: 36px 36px 6px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: barn
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Barnerom']]]
                        icon: mdi:bed
                        path: '#barnerom'
                        state: |
                          [[[ 
                            var temp1 = parseFloat(states['sensor.chauffage_salon_temperature'].state);
                            var temp2 = parseFloat(states['sensor.chauffage_salon_temperature'].state);      
                            var temp = Math.round((temp1 + temp2) / 2);

                            var hum1 = parseFloat(states['sensor.chauffage_salon_temperature'].state);
                            var hum2 = parseFloat(states['sensor.chauffage_salon_temperature'].state);      
                            var hum = Math.round((hum1 + hum2) / 2);

                            return temp + '°<span style="font-size:0.3em;opacity:0.7">' + hum + '%</span>'
                          ]]]
                        background: var(--gray000)
                        color: var(--pink)
                        text: var(--gray800)
                        radius: 36px 6px 36px 36px
                    - type: custom:button-card
                      view_layout:
                        grid-area: sov
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Soverom']]]
                        icon: mdi:bed-king
                        path: '#soverom'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--purple)
                        text: var(--gray800)
                        radius: 36px 36px 36px 6px
                    - type: custom:button-card
                      view_layout:
                        grid-area: bado
                      template: room_card
                      variables:
                        name: |
                          [[[ return 'Bad secondF']]]
                        icon: mdi:shower-head
                        path: '#bad_secondF'
                        state: >
                          [[[ 
                            var temp = states['sensor.chauffage_salon_temperature'].state;
                            var hum = states['sensor.chauffage_salon_temperature'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                            `
                          ]]]
                        background: var(--gray000)
                        color: var(--red)
                        text: var(--gray800)
                        radius: 6px 36px 36px 36px
              columns: 1
          - type: custom:gap-card
            height: 48
        view_layout:
          grid-area: left
      - type: custom:mod-card
        card_mod:
          style: |

            @media (min-width:180px) {
              ha-card {
                z-index:6;
                position: fixed;
                background: var(--gray800);
                bottom: 10px;
                left: 10px;
                padding: 10px;
                border-radius: 100px;
                width: calc(100% - 20px);
              }
            }

            @media (min-width:801px)  {
              ha-card {
                left: calc(20% + 43px);
                width: calc(60% - 30px);
              }
            }    
        card:
          type: grid
          square: false
          columns: 5
          cards:
            - type: custom:button-card
              icon: mdi:camera-outline
              show_label: false
              show_state: false
              show_name: false
              tap_action:
                action: navigate
                navigation_path: '#cameras'
              styles:
                icon:
                  - width: 24px
                  - color: var(--gray000)
                img_cell:
                  - width: 50px
                  - height: 50px
                card:
                  - background: none
                  - padding: 0
            - type: custom:button-card
              icon: mdi:power-plug-outline
              show_label: false
              show_state: false
              show_name: false
              tap_action:
                action: navigate
                navigation_path: '#electricite'
              styles:
                icon:
                  - width: 24px
                  - color: var(--gray000)
                img_cell:
                  - width: 50px
                  - height: 50px
                card:
                  - background: none
                  - padding: 0
            - type: custom:button-card
              icon: mdi:server-outline
              show_label: false
              show_state: false
              show_name: false
              tap_action:
                action: navigate
                navigation_path: '#server'
              styles:
                icon:
                  - width: 24px
                  - color: var(--gray000)
                img_cell:
                  - width: 50px
                  - height: 50px
                card:
                  - background: none
                  - padding: 0
            - type: custom:button-card
              icon: mdi:tune-variant
              show_label: false
              show_state: false
              show_name: false
              tap_action:
                action: navigate
                navigation_path: '#settings'
              styles:
                icon:
                  - width: 24px
                  - color: var(--gray000)
                img_cell:
                  - width: 50px
                  - height: 50px
                card:
                  - background: none
                  - padding: 0
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Météo
            icon: mdi:weather-partly-snowy-rainy
            state: null
            hash: '#weather'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }     

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--gray800)!important;} 

              .icon-container > ha-icon
              {color:var(--gray000)!important;opacity:1!important} 

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: vertical-stack
            cards:
              - type: custom:gap-card
                height: 12
              - type: custom:weather-card
                entity: weather.laval_previsions
              - type: custom:local-conditional-card
                id: vaer_idag
                default: hide
                card:
                  square: false
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: sensor.laval_weather_forecast_weekly
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - vaer_naa: show
                            - vaer_idag: hide
                      show_icon: false
                      show_name: false
                      show_label: true
                      custom_fields:
                        desc: Generelt i dag
                        desc2: Desc2
                        cond: |
                          [[[ return entity.attributes.condition ]]]
                        icon: >
                          [[[ return '<img src = "' +
                          entity.attributes.cond_icon +  '" width="240"
                          height="240" />' ]]] 
                        temp: >
                          [[[ return entity.attributes.temperature + '° <span
                          style="font-size: 0.3em">' + entity.attributes.templow
                          + '°' ]]] 
                        wind: |
                          [[[ return entity.attributes.wind_desc]]]   
                        rain: >
                          [[[ return ' · ' + entity.attributes.precipitation + '
                          mm' ]]]    
                      styles:
                        grid:
                          - grid-template-areas: >-
                              "desc desc desc" "desc2 desc2 desc2" "icon icon
                              icon" "temp temp temp" "cond wind rain"
                          - grid-template-columns: min-content min-content 1fr
                          - grid-template-rows: >-
                              min-content min-content min-content min-content
                              min-content
                        card:
                          - background: var(--popupBG)
                          - padding: 24px
                          - box-shadow: none !important
                        custom_fields:
                          icon:
                            - align-self: start
                          desc:
                            - justify-self: start
                            - font-weight: 400
                            - color: var(--gray800)
                          desc2:
                            - justify-self: start
                            - text-align: left
                            - font-weight: 400
                            - font-size: .6em
                            - color: var(--gray800)
                          cond:
                            - justify-self: start
                            - font-weight: 400
                            - padding-right: 16px
                            - color: var(--gray800)
                          temp:
                            - justify-self: start
                            - text-align: left
                            - font-size: 4em
                            - line-height: 1em
                            - font-weight: 300
                            - padding: 12px 0 0 0
                            - color: var(--gray800)
                          wind:
                            - justify-self: start
                            - align-self: start
                            - font-weight: 400
                            - padding-right: 12px
                            - color: var(--gray800)
                          rain:
                            - justify-self: start
                            - align-self: start
                            - font-weight: 400
                            - color: var(--gray800)
                  columns: 1
              - type: custom:gap-card
                height: 20
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 

                    return entity.attributes.condition + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation + ' mm'

                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow + '°'
                    ]]]
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 

                    return entity.attributes.condition1 + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation1 + ' mm'

                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime1)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature1 + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow1 +
                    '°' ]]]
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon1;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 


                    return entity.attributes.condition2 + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation2 + ' mm'


                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime2)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature2 + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow2 +
                    '°' ]]]
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon2;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 

                    return entity.attributes.condition3 + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation3 + ' mm'

                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime3)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature3 + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow3 +
                    '°' ]]]
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon3;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 


                    return entity.attributes.condition4 + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation4 + ' mm'


                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime4)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature4 + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow4 +
                    '°' ]]] 
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon4;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 


                    return entity.attributes.condition5 + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation5 + ' mm'


                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime5)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature5 + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow5 +
                    '°' ]]]
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon5;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  cond: >
                    [[[ 


                    return entity.attributes.condition6 + '<span
                    style="padding-left:12px; text-transform:lowercase">' + ' ·
                    ' +  entity.attributes.precipitation6 + ' mm'


                    ]]]
                  day: >
                    [[[  return
                    helpers.formatDateWeekday(entity.attributes.datetime6)
                    ]]]     
                  temp: >
                    [[[  return entity.attributes.temperature6 + '° <span
                    style="font-size: 0.3em">' + entity.attributes.templow6 +
                    '°' ]]]
                  icon: |
                    [[[
                      var weather = entity.attributes.cond_icon6;
                      return '<img src = "' + weather + '" width="90" height="90" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"day day icon" "temp . icon" "cond cond icon"'
                    - grid-template-columns: 1fr 1fr 1fr
                    - grid-template-rows: min-content 1fr min-content
                  card:
                    - background: var(--popupBG)
                    - padding: 24px
                    - height: 150px
                    - margin-bottom: 12px
                  custom_fields:
                    day:
                      - justify-self: start
                      - align-self: end
                      - font-weight: 400
                      - text-transform: capitalize;
                      - color: var(--gray800)
                    cond:
                      - justify-self: start
                      - align-self: end
                      - text-transform: capitalize
                      - font-weight: 400
                      - color: var(--gray800)
                    temp:
                      - justify-self: start
                      - text-align: left
                      - font-size: 3em
                      - line-height: 40px
                      - font-weight: 300
                      - color: var(--gray800)
                    icon:
                      - justify-self: end
                      - margin-top: 10px
              - type: custom:gap-card
                height: 30
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Wifi
            icon: mdi:wifi
            state: null
            hash: '#wifi'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }     

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--gray800)!important;} 

              .icon-container > ha-icon
              {color:var(--gray000)!important;opacity:1!important} 

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: vertical-stack
            cards:
              - type: custom:gap-card
                height: 12
              - type: custom:button-card
                entity: sensor.laval_weather_forecast_weekly
                show_icon: false
                show_name: false
                custom_fields:
                  user: >
                    [[[ 

                    return '<ha-icon icon="mdi:wifi" style="transform:
                    translate(0, -3px);padding-right: 15px; width:26px; height:
                    26px; color: var(--gray800);"> </ha-icon>' + 'DinoIot'

                    ]]]
                  pass: >
                    [[[ 

                    return '<ha-icon icon="mdi:lock" style="transform:
                    translate(0, -2px);padding-right: 15px; width:26px; height:
                    26px; color: var(--gray800);"> </ha-icon>' + '********'

                    ]]]
                  icon: |
                    [[[
                      return '<img src = "/local/wifi.png" width="150" height="150" />'
                    ]]]
                styles:
                  grid:
                    - grid-template-areas: '"icon user" "icon pass"'
                    - grid-template-columns: max-content 1fr
                    - grid-template-rows: 1fr 1fr
                  card:
                    - background: var(--popupBG)
                    - padding-left: 16px
                  custom_fields:
                    user:
                      - justify-self: start
                      - font-size: 1em
                      - align-self: end
                      - padding-bottom: 6px
                      - color: var(--gray800)
                    pass:
                      - justify-self: start
                      - padding-top: 6px
                      - font-size: 1em
                      - align-self: start
                      - color: var(--gray800)
                    icon:
                      - justify-self: center
                      - align-self: center
                      - padding-right: 16px
                      - padding-bottom: '-8px'
                      - color: var(--gray800)
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Cameras
            icon: mdi:camera-outline
            state: null
            hash: '#cameras'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }     

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--gray800)!important;} 

              .icon-container > ha-icon
              {color:var(--gray000)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: vertical-stack
            cards:
              - type: custom:local-conditional-card
                default: show
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:gap-card
                      height: 6
                    - type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:frigate-card
                          cameras:
                            - camera_entity: camera.front_doorbell
                          menu:
                            buttons:
                              microphone:
                                enabled: true
                                alignment: opposing
                                priority: 100
                                type: toggle
                                icon: mdi:microphone
                              substreams:
                                enabled: true
                              clips:
                                enabled: true
                              snapshots:
                                enabled: false
                              download:
                                enabled: true
                              fullscreen:
                                enabled: true
                              timeline:
                                enabled: false
                              media_player:
                                enabled: false
                              cameras:
                                enabled: false
                              recordings:
                                enabled: true
                              expand:
                                enabled: true
                              screenshot:
                                enabled: true
                            view:
                              default: live
                              update_force: true
                        - type: custom:gap-card
                          height: 12
                        - type: custom:frigate-card
                          cameras:
                            - camera_entity: camera.dlink8360
                          menu:
                            buttons:
                              microphone:
                                enabled: true
                                alignment: opposing
                                priority: 100
                                type: toggle
                                icon: mdi:microphone
                              substreams:
                                enabled: true
                              clips:
                                enabled: true
                              snapshots:
                                enabled: false
                              download:
                                enabled: true
                              fullscreen:
                                enabled: true
                              timeline:
                                enabled: false
                              media_player:
                                enabled: false
                              cameras:
                                enabled: false
                              recordings:
                                enabled: true
                              expand:
                                enabled: true
                              screenshot:
                                enabled: true
                            view:
                              default: live
                              update_force: true
                        - type: custom:gap-card
                          height: 12
                        - type: custom:frigate-card
                          cameras:
                            - camera_entity: camera.reolink
                          menu:
                            buttons:
                              microphone:
                                enabled: true
                                alignment: opposing
                                priority: 100
                                type: toggle
                                icon: mdi:microphone
                              substreams:
                                enabled: true
                              clips:
                                enabled: true
                              snapshots:
                                enabled: false
                              download:
                                enabled: true
                              fullscreen:
                                enabled: true
                              timeline:
                                enabled: false
                              media_player:
                                enabled: false
                              cameras:
                                enabled: false
                              recordings:
                                enabled: true
                              expand:
                                enabled: true
                              screenshot:
                                enabled: true
                            view:
                              default: live
                              update_force: true
                        - type: custom:gap-card
                          height: 12
                        - type: custom:frigate-card
                          cameras:
                            - camera_entity: camera.tapo_c200_ss
                          menu:
                            buttons:
                              microphone:
                                enabled: true
                                alignment: opposing
                                priority: 100
                                type: toggle
                                icon: mdi:microphone
                              substreams:
                                enabled: true
                              clips:
                                enabled: true
                              snapshots:
                                enabled: false
                              download:
                                enabled: true
                              fullscreen:
                                enabled: true
                              timeline:
                                enabled: false
                              media_player:
                                enabled: false
                              cameras:
                                enabled: false
                              recordings:
                                enabled: true
                              expand:
                                enabled: true
                              screenshot:
                                enabled: true
                            view:
                              default: live
                              update_force: true
                        - type: custom:gap-card
                          height: 12
                        - type: custom:frigate-card
                          cameras:
                            - camera_entity: camera.tapo_c210_out
                          menu:
                            buttons:
                              microphone:
                                enabled: true
                                alignment: opposing
                                priority: 100
                                type: toggle
                                icon: mdi:microphone
                              substreams:
                                enabled: true
                              clips:
                                enabled: true
                              snapshots:
                                enabled: false
                              download:
                                enabled: true
                              fullscreen:
                                enabled: true
                              timeline:
                                enabled: false
                              media_player:
                                enabled: false
                              cameras:
                                enabled: false
                              recordings:
                                enabled: true
                              expand:
                                enabled: true
                              screenshot:
                                enabled: true
                            view:
                              default: live
                              update_force: true
                        - type: custom:gap-card
                          height: 12
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Utilisation Électrique
            icon: mdi:power-plug
            state: null
            hash: '#electricite'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }     

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--gray800)!important;} 

              .icon-container > ha-icon
              {color:var(--gray000)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: vertical-stack
            cards:
              - type: custom:local-conditional-card
                id: forbruk
                default: show
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:gap-card
                      height: 6
                    - type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: energy-distribution
                          card_mod:
                            style: >
                              ha-card {
                                background: var(--popupBG)!important;
                              }

                              .mdc-data-table {
                                background: var(--popupBG)!important;
                              }

                              .mdc-data-table__row {height: 32px!important;}
                              .mdc-data-table__table-container {padding-bottom:
                              12px!important;}            

                              .mdc-data-table__table {
                                white-space: unset!important;
                              }

                              .mdc-data-table__cell,
                              .mdc-data-table__header-cell {border:
                              none!important;}

                              .mdc-data-table .mdc-data-table__header-cell
                              {background:var(--popupBG)!important;border-bottom:1px
                              solid var(--popupBG)!important}

                              .bullet {width: 16px!important;border-radius:
                              24px!important;border-width: 0!important;}
                    - type: custom:gap-card
                      height: 12
                    - type: custom:gap-card
                      height: 12
                    - type: energy-date-selection
                      card_mod:
                        style: >
                          ha-card {background: none;}

                          ha-card > div > hui-energy-period-selector $ div >
                          .label {font-size:10px!important }

                          }
                    - type: energy-usage-graph
                      card_mod:
                        style: |
                          ha-card {background: var(--popupBG);}
                          }
                    - type: custom:gap-card
                      height: 12
                    - type: energy-devices-detail-graph
                      max_devices: 4
                      card_mod:
                        style: >
                          ha-card {
                            background: var(--popupBG)!important;
                          }

                          .mdc-data-table {
                            background: var(--popupBG)!important;
                          }

                          .mdc-data-table__row {height: 32px!important;}
                          .mdc-data-table__table-container {padding-bottom:
                          12px!important;}            

                          .mdc-data-table__table {
                            white-space: unset!important;
                          }

                          .mdc-data-table__cell, .mdc-data-table__header-cell
                          {border: none!important;}

                          .mdc-data-table .mdc-data-table__header-cell
                          {background:var(--popupBG)!important;border-bottom:1px
                          solid var(--popupBG)!important}

                          .bullet {width: 16px!important;border-radius:
                          24px!important;border-width: 0!important;}  
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Server
            icon: mdi:server
            state: null
            hash: '#server'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }     

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--gray800)!important;} 

              .icon-container > ha-icon
              {color:var(--gray000)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 22px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: vertical-stack
            cards:
              - type: custom:local-conditional-card
                id: homeass
                default: show
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four five"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: two
                          variables:
                            name: Home Assistant
                            icon: mdi:home-assistant
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - homeass: show
                                - plex: hide
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: three
                          variables:
                            name: Server
                            icon: mdi:multimedia
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - homeass: hide
                                - plex: show
                    - type: custom:gap-card
                      height: 6
                    - square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          template: sensor_small
                          entity: sensor.none_cpu_utilization
                          variables:
                            name: CPU
                            icon: mdi:cpu-64-bit
                            background: var(--popupBG)
                            label: |
                              [[[
                                  return entity.state + "%";   
                              ]]]
                        - type: custom:button-card
                          template: sensor_small
                          entity: sensor.system_monitor_utilisation_de_la_memoire
                          variables:
                            name: RAM
                            icon: mdi:memory
                            background: var(--popupBG)
                            label: |
                              [[[
                                  return entity.state + "%";   
                              ]]]
                        - type: custom:button-card
                          template: sensor_big_percentage
                          variables:
                            name: HDD
                            entity: sensor.system_monitor_utilisation_du_disque
                            icon: mdi:harddisk
                            background: var(--popupBG)
                            bar: >
                              [[[   var color = "var(--red)";  var state = 100 -
                              entity.state;  if (state > 75) color =
                              "var(--blue)";  else if(state > 50)  color =
                              "var(--orange)";

                              return  `<div> <div style="background:${color};
                              height: 30px;width:${state}%; "></div></div>` ]]]
                            label: >
                              [[[ return
                              Math.round((states['sensor.system_monitor_espace_libre'].state)
                              * 100)/100 + '<span style="font-size:14px">
                              GB</span>' ]]]
              - type: custom:local-conditional-card
                id: plex
                default: hide
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four five"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: two
                          variables:
                            name: Home Assistant
                            icon: mdi:home-assistant
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - homeass: show
                                - plex: hide
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: three
                          variables:
                            name: Server
                            icon: mdi:multimedia
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - homeass: hide
                                - plex: show
                    - type: custom:gap-card
                      height: 6
                    - square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          template: sensor_small
                          entity: sensor.system_monitor_utilisation_du_processeur
                          variables:
                            name: CPU
                            icon: mdi:cpu-64-bit
                            background: var(--popupBG)
                            label: |
                              [[[
                                  return entity.state + "%";   
                              ]]]
                        - type: custom:button-card
                          template: sensor_small
                          entity: sensor.system_monitor_utilisation_de_la_memoire
                          variables:
                            name: RAM
                            icon: mdi:memory
                            background: var(--popupBG)
                            label: |
                              [[[
                                  return entity.state + "%";   
                              ]]]
                        - type: custom:button-card
                          template: sensor_big_percentage
                          variables:
                            name: Harddisk Z
                            entity: sensor.system_monitor_memoire_utilisee
                            icon: mdi:harddisk
                            background: var(--popupBG)
                            bar: >
                              [[[  var color = "var(--red)"; var state = (100 -
                              entity.attributes.UsedSpacePercentage); if (state
                              > 50) color = "var(--blue)"; else if(state > 25)
                              color = "var(--orange)";

                              return  `<div> <div style="background:${color};
                              height: 30px;width:${state}%; "></div></div>` ]]]
                            label: >
                              [[[  return
                              Math.round(((entity.attributes.TotalSizeMB -
                              entity.attributes.UsedSpaceMB) / 1000000)*
                              100)/100 +'<span style="font-size:14px">
                              TB</span>' ]]] 
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Stue firstF
            icon: mdi:sofa
            state: null
            hash: '#stue_firstF'
            is_sidebar_hidden: true
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--green)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important} 

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_stue_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_stue_humidity'].state) *
                10)/10 + '%']]]    
          - type: vertical-stack
            cards:
              - type: custom:local-conditional-card
                id: stue_lys
                default: show
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four five"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: two
                          variables:
                            name: Lys
                            icon: mdi:lamp
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: show
                                - stue_media: hide
                                - stue_enheter: hide
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: three
                          variables:
                            name: Info
                            icon: mdi:information
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: hide
                                - stue_media: hide
                                - stue_enheter: show
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: four
                          variables:
                            name: Media
                            icon: mdi:television-classic
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: hide
                                - stue_media: show
                                - stue_enheter: hide
                    - type: custom:gap-card
                      height: 6
                    - type: custom:decluttering-card
                      template: light_slider
                      variables:
                        - entity: light.dimmer_stue_firstF_left
                        - name: Stue
                        - icon: mdi:ceiling-light-multiple
                        - background: var(--popupBG)
                    - type: custom:decluttering-card
                      template: light_slider
                      variables:
                        - entity: light.dimmer_stue_firstF_right
                        - name: Spisebord
                        - icon: mdi:table-furniture
                        - background: var(--popupBG)
                    - square: false
                      type: grid
                      cards:
                        - type: custom:decluttering-card
                          template: light_toggle
                          variables:
                            - entity: switch.stue_firstF_power_strip_sofa_l3
                            - name: Sofa
                            - icon: mdi:sofa
                            - background: var(--popupBG)
                        - type: custom:decluttering-card
                          template: light_toggle
                          variables:
                            - entity: switch.plug_garderobe_soverom
                            - name: Under trappa
                            - icon: mdi:stairs
                            - background: var(--popupBG)
                      columns: 2
                    - type: custom:decluttering-card
                      template: light_slider
                      variables:
                        - entity: light.dimmer_oppgang
                        - name: Oppgang
                        - icon: mdi:ceiling-light
                        - background: var(--popupBG)
                    - type: vertical-stack
                      cards:
                        - type: custom:button-card
                          name: Scener
                          styles:
                            card:
                              - background: none
                              - padding: 12px 0 15px 0
                              - overflow: visible
                              - '--mdc-ripple-press-opacity': 0
                            name:
                              - font-size: 16px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: center
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: max-content max-content max-content
                            grid-template-rows: min-content
                            grid-template-areas: |
                              "one two three"  
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: call-service
                                service: scene.turn_on
                                target:
                                  entity_id: scene.filmkveld
                                data:
                                  transition: 2
                              view_layout:
                                grid-area: one
                              template: chips_big
                              variables:
                                name: Filmkveld
                                icon: mdi:movie-open
                            - type: custom:button-card
                              tap_action:
                                action: call-service
                                service: scene.turn_on
                                target:
                                  entity_id: scene.stue_firstF_alt_av_utenom_anlegg
                                data:
                                  transition: 2
                              template: chips_big
                              view_layout:
                                grid-area: two
                              variables:
                                name: Alt av
                                icon: mdi:power
                            - type: custom:button-card
                              tap_action:
                                action: call-service
                                service: scene.turn_on
                                target:
                                  entity_id: scene.stue_firstF_alt_av
                                data:
                                  transition: 2
                              template: chips_big
                              view_layout:
                                grid-area: three
                              variables:
                                name: Natta
                                icon: mdi:sleep
              - type: custom:local-conditional-card
                id: stue_enheter
                default: hide
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four five"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: two
                          variables:
                            name: Lys
                            icon: mdi:lamp
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: show
                                - stue_media: hide
                                - stue_enheter: hide
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: three
                          variables:
                            name: Info
                            icon: mdi:information
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: hide
                                - stue_media: hide
                                - stue_enheter: show
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: four
                          variables:
                            name: Media
                            icon: mdi:television-classic
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: hide
                                - stue_media: show
                                - stue_enheter: hide
                    - type: custom:gap-card
                      height: 6
                    - square: false
                      type: grid
                      cards:
                        - type: custom:button-card
                          template: sensor_big
                          variables:
                            name: Balkongdør
                            icon: mdi:door
                            background: var(--popupBG)
                          entity: binary_sensor.contact_door_balcony_contact
                          state:
                            - value: 'off'
                              label: Lukket
                              icon: mdi:door-closed
                            - value: 'on'
                              label: Åpen
                              icon: mdi:door-open
                              styles:
                                card:
                                  - background: var(--red)
                      columns: 2
              - type: custom:local-conditional-card
                id: stue_media
                default: hide
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four five"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: two
                          variables:
                            name: Lys
                            icon: mdi:lamp
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: show
                                - stue_media: hide
                                - stue_enheter: hide
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: three
                          variables:
                            name: Info
                            icon: mdi:information
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: hide
                                - stue_media: hide
                                - stue_enheter: show
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: four
                          variables:
                            name: Media
                            icon: mdi:television-classic
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - stue_lys: hide
                                - stue_media: show
                                - stue_enheter: hide
                    - type: custom:gap-card
                      height: 6
                    - type: custom:button-card
                      entity: media_player.samsung_tv2
                      name: TV
                      show_icon: true
                      icon: mdi:television-classic
                      tap_action:
                        action: toggle
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--active-big)
                          custom_fields:
                            state: >
                              [[[ return 'Ser på ' +
                              states['media_player.samsung_tv2'].attributes.media_title]]]
                        - value: 'off'
                          custom_fields:
                            state: TV er av
                          styles:
                            card:
                              - background: var(--gray800)
                            img_cell:
                              - background: rgba(var(--highlight_active))
                            icon:
                              - color: var(--gray000)
                            name:
                              - color: var(--gray000)
                            custom_fields:
                              state:
                                - color: var(--gray000)
                      styles:
                        card:
                          - height: 66px
                          - border-radius: 75px
                          - padding: 4px 20px 4px 4px
                          - background: var(--popupBG)
                          - margin-bottom: 12px
                        grid:
                          - grid-template-columns: 76px 1fr min-content
                          - grid-template-areas: '"i state icon" "i n icon"'
                        icon:
                          - width: 30px
                          - color: var(--black)
                        img_cell:
                          - justify-self: start
                          - width: 30px
                          - height: 30px
                          - background: rgba(var(--highlight_active))
                          - padding: 14px
                          - border-radius: 50%
                        name:
                          - justify-self: start
                          - font-size: 14px
                          - color: var(--black)
                          - opacity: 0.7
                          - padding-bottom: 7px
                        custom_fields:
                          icon: null
                          state:
                            - justify-self: start
                            - font-size: 16px
                            - padding-top: 4px
                            - font-weight: 500
                            - color: var(--black)
                      custom_fields:
                        icon: |
                          [[[
                           var state = entity.state;
                           if(state == "on")
                            return `<ha-icon
                            icon="mdi:toggle-switch"
                            style="color: var(--black); width:50px; height:40px;">
                            </ha-icon>
                            `;
                           else 
                            return `<ha-icon
                            icon="mdi:toggle-switch-off"
                            style="color: var(--gray000); width:50px; height:40px;">
                            </ha-icon>
                            `;
                          ]]]
                    - type: custom:button-card
                      entity: input_boolean.disco_toggle
                      name: Disko
                      show_icon: true
                      icon: mdi:music
                      tap_action:
                        action: toggle
                      state:
                        - value: 'on'
                          custom_fields:
                            state: Diskolys er på
                          styles:
                            card:
                              - background: var(--active-big)
                            name:
                              - color: var(--black)
                            label:
                              - color: var(--black)
                            custom_fields:
                              state:
                                - color: var(--black)
                            icon:
                              - color: var(--black)
                            img_cell:
                              - background: rgba(var(--highlight_active))
                        - value: 'off'
                          custom_fields:
                            state: Disko er av
                          styles:
                            card:
                              - background: var(--gray800)
                            img_cell:
                              - background: rgba(var(--highlight_active))
                            icon:
                              - color: var(--gray000)
                            name:
                              - color: var(--gray000)
                            custom_fields:
                              state:
                                - color: var(--gray000)
                      styles:
                        card:
                          - height: 66px
                          - border-radius: 75px
                          - padding: 4px 20px 4px 4px
                          - background: var(--popupBG)
                          - margin-bottom: 12px
                        grid:
                          - grid-template-columns: 76px 1fr min-content
                          - grid-template-areas: '"i state icon" "i n icon"'
                        icon:
                          - width: 30px
                          - color: var(--gray800)
                        img_cell:
                          - justify-self: start
                          - width: 30px
                          - height: 30px
                          - background: rgba(var(--highlight))
                          - padding: 14px
                          - border-radius: 50%
                        name:
                          - justify-self: start
                          - font-size: 14px
                          - color: var(--gray800)
                          - opacity: 0.7
                          - padding-bottom: 7px
                        custom_fields:
                          icon: null
                          state:
                            - justify-self: start
                            - font-size: 16px
                            - padding-top: 4px
                            - font-weight: 500
                            - color: var(--gray800)
                      custom_fields:
                        icon: |
                          [[[
                           var state = entity.state;
                           if(state == "on")
                            return `<ha-icon
                            icon="mdi:toggle-switch"
                            style="color: var(--black); width:50px; height:40px;">
                            </ha-icon>
                            `;
                           else 
                            return `<ha-icon
                            icon="mdi:toggle-switch-off"
                            style="color: var(--gray000); width:50px; height:40px;">
                            </ha-icon>
                            `;
                          ]]]
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: input_boolean.disco_toggle
                          state: 'on'
                      card:
                        square: true
                        type: grid
                        cards:
                          - type: custom:button-card
                            name: 1
                            aspect_ratio: 1/1
                            show_icon: false
                            entity: select.wled_soundreactive_preset
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: select.wled_soundreactive_preset
                              data:
                                option: Nice
                            state:
                              - value: Nice
                                styles:
                                  name:
                                    - color: var(--black)
                                  card:
                                    - background: var(--active-big)
                            styles:
                              card:
                                - background: var(--gray800)
                              name:
                                - font-size: 16px
                                - font-weight: 500
                                - color: var(--gray000)
                                - padding: 2px 0px
                          - type: custom:button-card
                            name: 2
                            aspect_ratio: 1/1
                            show_icon: false
                            entity: select.wled_soundreactive_preset
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: select.wled_soundreactive_preset
                              data:
                                option: Nice2
                            state:
                              - value: Nice2
                                styles:
                                  name:
                                    - color: var(--black)
                                  card:
                                    - background: var(--active-big)
                            styles:
                              card:
                                - background: var(--gray800)
                              name:
                                - font-size: 16px
                                - font-weight: 500
                                - color: var(--gray000)
                                - padding: 2px 0px
                          - type: custom:button-card
                            name: 3
                            aspect_ratio: 1/1
                            show_icon: false
                            entity: select.wled_soundreactive_preset
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: select.wled_soundreactive_preset
                              data:
                                option: Nice3
                            state:
                              - value: Nice3
                                styles:
                                  name:
                                    - color: var(--black)
                                  card:
                                    - background: var(--active-big)
                            styles:
                              card:
                                - background: var(--gray800)
                              name:
                                - font-size: 16px
                                - font-weight: 500
                                - color: var(--gray000)
                                - padding: 2px 0px
                          - type: custom:button-card
                            name: 4
                            aspect_ratio: 1/1
                            show_icon: false
                            entity: select.wled_soundreactive_preset
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: select.wled_soundreactive_preset
                              data:
                                option: Nice4
                            state:
                              - value: Nice4
                                styles:
                                  name:
                                    - color: var(--black)
                                  card:
                                    - background: var(--active-big)
                            styles:
                              card:
                                - background: var(--gray800)
                              name:
                                - font-size: 16px
                                - font-weight: 500
                                - color: var(--gray000)
                                - padding: 2px 0px
                          - type: custom:button-card
                            name: 5
                            aspect_ratio: 1/1
                            show_icon: false
                            entity: select.wled_soundreactive_preset
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: select.wled_soundreactive_preset
                              data:
                                option: Nice5
                            state:
                              - value: Nice5
                                styles:
                                  name:
                                    - color: var(--black)
                                  card:
                                    - background: var(--active-big)
                            styles:
                              card:
                                - background: var(--gray800)
                              name:
                                - font-size: 16px
                                - font-weight: 500
                                - color: var(--gray000)
                                - padding: 2px 0px
                        columns: 5
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Kjøkken
            icon: mdi:silverware-fork-knife
            state: null
            hash: '#kjokken'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }       #header-container > button {background: none;}    
              .icon-container {background-color:var(--blue)!important;} 
              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1}  .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_kjokken_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_kjokken_humidity'].state)
                * 10)/10 + '%']]]
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Lys
                styles:
                  card:
                    - background: none
                    - padding: 12px 0 15px 0
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.kjokken_dimmer_left
                  - name: Kjøkkenbenk
                  - icon: mdi:led-strip-variant
                  - background: var(--popupBG)
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.kjokken_dimmer_right
                  - name: Taklys
                  - icon: mdi:lightbulb-spot
                  - background: var(--popupBG)
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Info
                styles:
                  card:
                    - background: none
                    - padding: 0 0 15px 0
                    - overflow: visible
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: grid
                columns: 2
                square: null
                cards:
                  - type: custom:button-card
                    template: sensor_big
                    variables:
                      name: Kjøleskap
                      label: |
                        [[[
                          return states['sensor.temperatur_kjoleskap_temperature'].state + '°'
                        ]]]   
                      icon: mdi:fridge
                      background: var(--popupBG)
                  - type: custom:button-card
                    entity: sensor.oppvaskmaskin
                    name: Oppvaskmaskin
                    show_icon: true
                    icon: mdi:dishwasher
                    show_label: true
                    state:
                      - value: 'off'
                        label: Av
                        styles:
                          card:
                            - padding: 0 4px 20px 20px
                            - background: var(--popupBG)
                          grid:
                            - grid-template-areas: '"i" "l" "n"'
                            - grid-template-columns: 1fr
                          label:
                            - padding: 0
                            - color: var(--gray800)
                          name:
                            - padding: 0
                            - color: var(--gray800)
                          icon:
                            - color: var(--gray800)
                          img_cell:
                            - justify-self: end
                            - background: rgba(var(--highlight))
                          custom_fields:
                            program:
                              - display: none
                            bar:
                              - display: none
                    styles:
                      card:
                        - padding: 0
                        - height: 180px
                        - border-radius: 30px
                        - background: var(--active-light)
                      grid:
                        - grid-template-areas: '"i" "program" "n" "bar"'
                      name:
                        - justify-self: start
                        - align-self: start
                        - font-size: 14px
                        - color: var(--black)
                        - padding-left: 20px
                        - opacity: '0.7'
                      label:
                        - justify-self: start
                        - font-size: 40px
                        - font-weight: 300
                        - color: var(--black)
                        - padding: 0 0 20px 20px
                      img_cell:
                        - justify-self: end
                        - align-self: start
                        - background: rgba(var(--highlight))
                        - padding: 14px
                        - border-radius: 50%
                        - margin: 4px 4px 0 0
                        - width: 30px
                        - height: 30px
                      icon:
                        - width: 30px
                        - height: 30px
                        - color: var(--black)
                      custom_fields:
                        program:
                          - justify-self: start
                          - font-size: 40px
                          - font-weight: 300
                          - padding-left: 5px
                          - padding-right: 5px
                          - color: var(--black)
                          - margin-bottom: '-11px'
                        bar:
                          - justify-self: start
                          - width: 100%
                          - background: rgba(var(--highlight))
                          - height: 30px
                          - margin-top: 6px
                    custom_fields:
                      program: >
                        [[[ return '<marquee behavior="alternate"
                        scrollamount="1">&nbsp;' + entity.attributes.remain_time
                        + '<span style="font-size: 0.3em">&nbsp;&nbsp;' +
                        states['sensor.dishwasher_states'].attributes.current_course
                        +
                         ' · ' + 
                         states['sensor.dishwasher_states'].attributes.run_state + ' <\marquee>'
                        ]]]  
                      bar: >
                        [[[   var state =
                        states['sensor.dishwashing_remain_percent'].state;

                        return  `<div> <div style="background:var(--black);
                        height: 30px;width:${state}%; "></div></div>` ]]]  
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Gang
            icon: mdi:door
            state: null
            hash: '#gang'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--yellow)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important;}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_gang_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_gang_humidity'].state) *
                10)/10 + '%']]]
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Lys
                styles:
                  card:
                    - background: none
                    - padding: 12px 0 15px 0
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.group_gang_taklys
                  - name: Taklampe
                  - icon: mdi:ceiling-light
                  - background: var(--popupBG)
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.lamp_ute_carport
                  - name: Utelampe
                  - icon: mdi:coach-lamp
                  - background: var(--popupBG)
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Info
                styles:
                  card:
                    - background: none
                    - padding: 0 0 15px 0
                    - overflow: visible
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: grid
                columns: 2
                square: false
                cards:
                  - type: custom:button-card
                    template: sensor_big
                    entity: lock.inngangsdor
                    variables:
                      name: Inngangsdør
                      background: var(--popupBG)
                      icon: mdi:fridge
                    state:
                      - value: locked
                        label: Låst
                        icon: mdi:door-closed
                        styles:
                          card:
                            - background: var(--popupBG)
                      - value: unlocked
                        label: Åpen
                        icon: mdi:door-open
                        styles:
                          card:
                            - background: var(--active-big)
                  - type: custom:button-card
                    template: sensor_big
                    entity: sensor.mm_display
                    variables:
                      name: Magic Mirror
                      icon: mdi:mirror-rectangle
                      background: var(--popupBG)
                    state:
                      - value: 'on'
                        label: På
                        styles:
                          card:
                            - background: var(--active-big)
                          name:
                            - color: var(--black)
                          label:
                            - color: var(--black)
                          icon:
                            - color: var(--black)
                          img_cell:
                            - background: rgba(var(--highlight_active))
                      - value: 'off'
                        label: Skrudd av
                        styles:
                          card:
                            - background: var(--red)
                      - value: unavailable
                        label: Skrudd av
                        styles:
                          card:
                            - background: var(--red)
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Stue secondF
            icon: mdi:desk
            hash: '#stue_secondF'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--orange)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_stue_secondF_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_stue_secondF_humidity'].state)
                * 10)/10 + '%']]]
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Lys
                styles:
                  card:
                    - background: none
                    - padding: 12px 0 15px 0
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.light_group_stue_secondF_taklys
                  - name: Taklampe
                  - icon: mdi:ceiling-light
                  - background: var(--popupBG)
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.dimmer_lampe_stue_secondF
                  - name: Bordlampe
                  - icon: mdi:lamp
                  - background: var(--popupBG)
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Scener
                styles:
                  card:
                    - background: none
                    - padding: 0 0 15px 0
                    - overflow: visible
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: max-content max-content max-content
                  grid-template-rows: min-content
                  grid-template-areas: |
                    "one two three"  
                cards:
                  - type: custom:button-card
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.stue_secondF_hjemmekontor
                      data:
                        transition: 2
                    view_layout:
                      grid-area: one
                    template: chips_big
                    variables:
                      name: Hjemmekontor
                      icon: mdi:desk
                  - type: custom:button-card
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.stue_secondF_leggetid
                      data:
                        transition: 2
                    template: chips_big
                    view_layout:
                      grid-area: two
                    variables:
                      name: Leggetid
                      icon: mdi:sleep
                  - type: custom:button-card
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.stue_secondF_alt_av
                      data:
                        transition: 2
                    template: chips_big
                    view_layout:
                      grid-area: three
                    variables:
                      name: Alt av
                      icon: mdi:power
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Bad secondF
            icon: mdi:bathtub
            hash: '#bad_secondF'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--red)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_bad_secondF_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_bad_secondF_humidity'].state)
                * 10)/10 + '%']]]
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Lys
                styles:
                  card:
                    - background: none
                    - padding: 12px 0 15px 0
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.lamp_bad_secondF_tak
                  - name: Taklampe
                  - icon: mdi:ceiling-light-multiple-outline
                  - background: var(--popupBG)
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Bad firstF
            icon: mdi:washing-machine
            state: null
            hash: '#bad_firstF'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--blue-dark)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_bad_firstF_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_bad_firstF_humidity'].state)
                * 10)/10 + '%']]]
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Lys
                styles:
                  card:
                    - background: none
                    - padding: 12px 0 15px 0
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.bad_firstF_taklampe
                  - name: Taklampe
                  - icon: mdi:ceiling-light
                  - background: var(--popupBG)
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Info
                styles:
                  card:
                    - background: none
                    - padding: 0 0 15px 0
                    - overflow: visible
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:button-card
                entity: sensor.vaskemaskin
                name: Vaskemaskin
                show_icon: true
                icon: mdi:washing-machine
                show_label: true
                hold_action:
                  action: call-service
                  service: automation.trigger
                  target:
                    entity_id: automation.vaskemaskin_remote_start
                  data:
                    skip_condition: true
                  confirmation:
                    text: >
                      [[[ var state =
                      states['sensor.billig_stromperiode'].state;  return
                      `Billigste strømperiode starter ${state}. Starte
                      vaskemaskinen da?` ]]]
                state:
                  - value: 'off'
                    label: Av
                    styles:
                      card:
                        - padding: 0 4px 20px 20px
                        - background: var(--popupBG)
                      grid:
                        - grid-template-areas: '"i" "l" "n"'
                        - grid-template-columns: 1fr
                      label:
                        - padding: 0
                        - color: var(--gray800)
                      name:
                        - padding: 0
                        - color: var(--gray800)
                      icon:
                        - color: var(--gray800)
                      img_cell:
                        - justify-self: end
                        - background: rgba(var(--highlight))
                      custom_fields:
                        program:
                          - display: none
                          - color: var(--gray800)
                        bar:
                          - display: none
                styles:
                  card:
                    - padding: 0
                    - height: 180px
                    - border-radius: 30px
                    - background: var(--active-light)
                  grid:
                    - grid-template-areas: '"i i" "program program" "n n" "bar bar"'
                    - grid-template-columns: min-content 1fr
                  name:
                    - justify-self: start
                    - align-self: start
                    - font-size: 14px
                    - color: var(--black)
                    - padding-left: 20px
                    - opacity: '0.7'
                  label:
                    - justify-self: start
                    - font-size: 40px
                    - font-weight: 300
                    - color: var(--black)
                    - padding: 0 0 20px 20px
                  img_cell:
                    - justify-self: end
                    - align-self: start
                    - margin: 4px 4px 0 0
                    - background: rgba(var(--highlight_active))
                    - padding: 14px
                    - border-radius: 50%
                    - width: 30px
                    - height: 30px
                  icon:
                    - width: 30px
                    - height: 30px
                    - color: var(--black)
                  custom_fields:
                    program:
                      - justify-self: start
                      - font-size: 40px
                      - font-weight: 300
                      - color: var(--black)
                      - padding: 0 5px 0 5px
                      - margin-bottom: '-12px'
                    bar:
                      - justify-self: start
                      - width: 100%
                      - background: rgba(var(--highlight_active))
                      - height: 30px
                      - margin-top: 6px
                custom_fields:
                  program: >
                    [[[ return '<marquee behavior="alternate"
                    scrollamount="3">&nbsp;' + entity.attributes.remain_time +
                    '<span style="font-size: 0.3em">&nbsp;&nbsp;' +
                    entity.attributes.current_course +
                     ' · ' + 
                     entity.attributes.run_state + ' <\marquee>'
                    ]]]  
                  bar: >
                    [[[   var state =
                    states['sensor.washing_remain_percent'].state;

                    return  `<div> <div style="background:var(--black); height:
                    30px;width:${state}%; "></div></div>` ]]]  
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Soverom
            icon: mdi:bed-king
            hash: '#soverom'
            is_sidebar_hidden: true
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--purple)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
          - type: custom:gap-card
            height: 12
          - type: custom:button-card
            template: room_conditions
            variables:
              background: var(--popupBG)
              entity: sensor.temperatur_stue_temperature
              temp: >
                [[[ return
                Math.round((states['sensor.temperatur_soverom_temperature'].state)
                * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                Math.round((states['sensor.temperatur_soverom_humidity'].state)
                * 10)/10 + '%']]]
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Lys
                styles:
                  card:
                    - background: none
                    - padding: 12px 0 15px 0
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.wled_soverom_2
                  - name: Sengegavl
                  - icon: mdi:led-strip-variant
                  - background: var(--popupBG)
              - type: custom:decluttering-card
                template: light_slider
                variables:
                  - entity: light.soverom_dimmer_taklampe
                  - name: Taklampe
                  - icon: mdi:ceiling-light
                  - background: var(--popupBG)
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:decluttering-card
                    template: light_toggle
                    variables:
                      - entity: input_boolean.leselys_madeleine
                      - name: Leselys Madeleine
                      - icon: mdi:face-woman
                      - background: var(--popupBG)
                  - type: custom:decluttering-card
                    template: light_toggle
                    variables:
                      - entity: input_boolean.leselys_anders
                      - name: Leselys Anders
                      - icon: mdi:face-man
                      - background: var(--popupBG)
          - type: vertical-stack
            cards:
              - type: custom:button-card
                name: Scener
                styles:
                  card:
                    - background: none
                    - padding: 0 0 15px 0
                    - overflow: visible
                    - '--mdc-ripple-press-opacity': 0
                  name:
                    - font-size: 16px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: center
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: max-content max-content max-content
                  grid-template-rows: min-content
                  grid-template-areas: |
                    "one two"  
                cards:
                  - type: custom:button-card
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.soverom_romance
                      data:
                        transition: 2
                    view_layout:
                      grid-area: one
                    template: chips_big
                    variables:
                      name: Løøve
                      icon: mdi:heart
                  - type: custom:button-card
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.soverom_alt_av
                      data:
                        transition: 2
                    template: chips_big
                    view_layout:
                      grid-area: two
                    variables:
                      name: Alt av
                      icon: mdi:power
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            name: Barnerom
            icon: mdi:bed
            hash: '#barnerom'
            is_sidebar_hidden: true
            margin_top_mobile: 50px
            margin_top_desktop: 50px
            card_layout: large
            styles: >-
              .bubble-pop-up-container {
                --vertical-stack-card-gap: 0px!important;
              } #header-container > div > div {
                background: var(--popupBG)!important;
              }      

              #header-container > button {background: none;}    

              .icon-container {background-color:var(--pink)!important;} 

              .icon-container > ha-icon
              {color:var(--black)!important;opacity:1!important}

              .bubble-icon {
                --mdc-icon-size: 24px !important;
              }
            bg_blur: '20'
            shadow_opacity: '20'
            bg_opacity: '88'
          - type: custom:gap-card
            height: 6
          - type: vertical-stack
            cards:
              - type: custom:local-conditional-card
                id: soverom_mille
                default: show
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: two
                          variables:
                            name: Mille
                            icon: mdi:bed
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - soverom_mille: show
                                - soverom_emma: hide
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: three
                          variables:
                            name: Emma
                            icon: mdi:bed
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - soverom_mille: hide
                                - soverom_emma: show
                    - type: custom:gap-card
                      height: 6
                    - type: custom:button-card
                      template: room_conditions
                      variables:
                        background: var(--popupBG)
                        entity: sensor.temperatur_mille_temperature
                        temp: >
                          [[[ return
                          Math.round((states['sensor.temperatur_mille_temperature'].state)
                          * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                          Math.round((states['sensor.temperatur_mille_humidity'].state)
                          * 10)/10 + '%']]]
                    - type: vertical-stack
                      cards:
                        - type: custom:button-card
                          name: Lys
                          styles:
                            card:
                              - background: none
                              - padding: 12px 0 15px 0
                              - '--mdc-ripple-press-opacity': 0
                            name:
                              - font-size: 16px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: center
                        - type: custom:decluttering-card
                          template: light_slider
                          variables:
                            - entity: light.mille_dimmer_taklampe
                            - name: Taklampe
                            - icon: mdi:ceiling-light
                            - background: var(--popupBG)
                        - type: custom:decluttering-card
                          template: light_slider
                          variables:
                            - entity: light.mille_bulb_lampe
                            - name: Lampe
                            - icon: mdi:lamp
                            - background: var(--popupBG)
              - type: custom:local-conditional-card
                id: soverom_emma
                default: hide
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 1fr max-content max-content max-content 1fr
                        grid-template-rows: min-content
                        grid-template-areas: |
                          "one two three four"  
                      cards:
                        - type: custom:button-card
                          template: chips_medium
                          view_layout:
                            grid-area: two
                          variables:
                            name: Mille
                            icon: mdi:bed
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - soverom_mille: show
                                - soverom_emma: hide
                        - type: custom:button-card
                          template: chips_medium_active
                          view_layout:
                            grid-area: three
                          variables:
                            name: Emma
                            icon: mdi:bed
                          tap_action:
                            action: fire-dom-event
                            local_conditional_card:
                              action: set
                              ids:
                                - soverom_mille: hide
                                - soverom_emma: show
                    - type: custom:gap-card
                      height: 6
                    - type: custom:button-card
                      template: room_conditions
                      variables:
                        background: var(--popupBG)
                        entity: sensor.temperatur_mille_temperature
                        temp: >
                          [[[ return
                          Math.round((states['sensor.temperatur_emma_temperature'].state)
                          * 10)/10 + '°' + '<span style="font-size:0.3em">' +
                          Math.round((states['sensor.temperatur_emma_humidity'].state)
                          * 10)/10 + '%']]]
                    - type: vertical-stack
                      cards:
                        - type: custom:button-card
                          name: Lys
                          styles:
                            card:
                              - background: none
                              - padding: 12px 0 15px 0
                              - '--mdc-ripple-press-opacity': 0
                            name:
                              - font-size: 16px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: center
                        - type: custom:decluttering-card
                          template: light_slider
                          variables:
                            - entity: light.emma_dimmer_taklampe
                            - name: Taklampe
                            - icon: mdi:ceiling-light
                            - background: var(--popupBG)
    type: custom:grid-layout
    layout:
      grid-template-columns: 100%
      grid-template-rows: auto
      grid-template-areas: |
        "header"
        "left"
        "right"
        "footer"  
      mediaquery:
        '(min-width: 1024px)':
          grid-template-columns: 50% 50%
          justify-content: center
          grid-template-areas: |
            "header ."
            "left right"
            "footer footer" 
    theme: mysmarthome
